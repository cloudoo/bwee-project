<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>bwee-project</artifactId>
        <groupId>com.cloudo.bwee</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>bwee-web</artifactId>
    <properties>
        <jetty.context.path>/</jetty.context.path>
    </properties>

    <profiles>
        <!-- 配置在未指定-Djetty.port属性的情况下默认使用的端口号 -->
        <profile>
            <id>default-jetty-port</id>
            <activation>
                <property>
                    <name>!jetty.port</name>
                </property>
            </activation>
            <properties>
                <jetty.port>8210</jetty.port>
            </properties>
        </profile>
        <!-- 配置在未指定-Dskip.minify的情况下对CSS/JS资源进行压缩优化 -->
        <profile>
            <id>minify-assets</id>
            <activation>
                <!-- <property> <name>!skip.minify</name> </property> -->
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.samaxes.maven</groupId>
                        <artifactId>minify-maven-plugin</artifactId>
                        <version>1.7.6</version>
                        <executions>
                            <execution>
                                <id>default-minify</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <charset>UTF-8</charset>
                                    <!-- 这样配置实现：不合并，不加后缀，放到另一目录。然后WAR打包时覆盖原文件 -->
                                    <skipMerge>true</skipMerge>
                                    <nosuffix>true</nosuffix>
                                    <webappTargetDir>${project.build.directory}/minify</webappTargetDir>
                                    <cssEngine></cssEngine>
                                    <cssSourceDir>assets/css</cssSourceDir>
                                    <cssSourceIncludes>
                                        <cssSourceInclude>**</cssSourceInclude>
                                    </cssSourceIncludes>
                                    <cssSourceExcludes>
                                        <cssSourceExclude>*.png</cssSourceExclude>
                                        <cssSourceExclude>*.jpg</cssSourceExclude>

                                    </cssSourceExcludes>
                                    <jsEngine>CLOSURE</jsEngine>
                                    <jsSourceDir>assets/js</jsSourceDir>
                                    <jsSourceIncludes>
                                        <jsSourceInclude>**</jsSourceInclude>
                                    </jsSourceIncludes>
                                    <jsSourceExcludes>
                                        <jsSourceExclude>**/*.min.js</jsSourceExclude>
                                    </jsSourceExcludes>
                                </configuration>
                                <goals>
                                    <goal>minify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.2.3</version>
                        <configuration>
                            <!-- 为了将压缩过的文件以同名覆盖回来后放入WAR包 -->
                            <webResources>
                                <resource>
                                    <directory>${project.build.directory}/minify</directory>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.cloudo.bwee</groupId>
            <artifactId>bwee-app</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>

        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.61</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.10</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.4</version>
        </dependency>
        <!-- 安全相关 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.javassist</groupId>-->
<!--            <artifactId>javassist</artifactId>-->
<!--            <version>${javassist.version}</version>-->
<!--        </dependency>-->
        <!-- JavaEE规范Web应用必要依赖，必要时还应添加jstl、taglibs -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
            <version>2.1</version>
        </dependency>

        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <scope>provided</scope>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <scope>provided</scope>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.74.0</version>
        </dependency>

        <!-- HTML DOM解析 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.2</version>
        </dependency>

        <!-- 单元测试需要加载spring容器时 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>


        <!-- pdf 和 excel 需要的 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.12</version>
        </dependency>

        <!-- 表达式语言 -->
        <dependency>
            <groupId>ognl</groupId>
            <artifactId>ognl</artifactId>
            <version>3.1.2</version>
        </dependency>



        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <!-- 为了让WAR打包插件设定包名称不带版本号 -->
                    <warName>${project.artifactId}</warName>
                    <archive>
                        <!-- 为了在生成的MANIFEST.MF文件中添加Class-Path -->
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.20.v20190813</version>
                <configuration>
                    <httpConnector>
                        <port>${jetty.port}</port>
                    </httpConnector>
                    <!--  <connectors>
                         <connector implementation="org.eclipse.jetty.server.bio.SelectChannelConnector">
                             <port>${jetty.port}</port>
                         </connector>
                         <connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">
                             <port>9443</port>
                             <password>bigroup@2015</password>
                         </connector>
                     </connectors> -->
                    <useTestClasspath>false</useTestClasspath>
                    <contextXml>src/main/resources/jetty-contexts.xml</contextXml>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                        <!-- 修改了默认属性，防止静态文件被jetty锁定 -->
                        <defaultsDescriptor>src/main/webapp/WEB-INF/webdefault.xml</defaultsDescriptor>
                    </webAppConfig>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <port>${jetty.port}</port>
                    <path>${jetty.context.path}</path>
                    <useTestClasspath>false</useTestClasspath>
                </configuration>
            </plugin>

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <!-- 只为了将webapp目录也被添加进eclipse的源码视图中 -->
            <testResource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
                <includes>
                    <include>WEB-INF/web*.xml</include>
                </includes>
            </testResource>
        </testResources>
    </build>



</project>